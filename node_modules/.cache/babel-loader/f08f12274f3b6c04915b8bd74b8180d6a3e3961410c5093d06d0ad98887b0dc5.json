{"ast":null,"code":"var _jsxFileName = \"/home/samyukthap/Desktop/calendar-app/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport EventModal from \"./EventModal\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst MyCalendar = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check authentication status when component mounts\n    const checkAuth = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/auth/status\", {\n          credentials: \"include\"\n        });\n        const data = await response.json();\n        if (!data.authenticated) {\n          // If not authenticated, redirect to home page\n          navigate(\"/\");\n        }\n      } catch (error) {\n        console.error(\"Error checking auth status:\", error);\n        navigate(\"/\");\n      }\n    };\n    checkAuth();\n    fetchEvents();\n  }, [navigate]);\n  const fetchEvents = async () => {\n    const response = await fetch(\"http://localhost:5000/get-events\", {\n      credentials: 'include'\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setEvents(data.map(event => ({\n        title: event.summary,\n        start: new Date(event.start.dateTime),\n        end: new Date(event.end.dateTime)\n      })));\n    }\n  };\n  const handleSelectSlot = ({\n    start\n  }) => {\n    setSelectedDate(start);\n    setIsModalOpen(true);\n  };\n  const handleEventSubmit = async eventData => {\n    try {\n      const response = await fetch(\"http://localhost:5000/add-event\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"include\",\n        body: JSON.stringify(eventData)\n      });\n      if (response.ok) {\n        await fetchEvents(); // Refresh events after adding new one\n        setIsModalOpen(false);\n      } else {\n        alert(\"Failed to add event\");\n      }\n    } catch (error) {\n      console.error(\"Error adding event:\", error);\n      alert(\"Error adding event\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      selectable: true,\n      onSelectSlot: handleSelectSlot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onSubmit: handleEventSubmit,\n      selectedDate: selectedDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCalendar, \"lbVCxrApPbEcN3iwWkMQMIa2PyI=\", false, function () {\n  return [useNavigate];\n});\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useEffect","useState","Calendar","momentLocalizer","moment","useNavigate","EventModal","jsxDEV","_jsxDEV","localizer","MyCalendar","_s","events","setEvents","isModalOpen","setIsModalOpen","selectedDate","setSelectedDate","navigate","checkAuth","response","fetch","credentials","data","json","authenticated","error","console","fetchEvents","ok","map","event","title","summary","start","Date","dateTime","end","handleSelectSlot","handleEventSubmit","eventData","method","headers","body","JSON","stringify","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","startAccessor","endAccessor","style","height","selectable","onSelectSlot","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/home/samyukthap/Desktop/calendar-app/src/components/Calendar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { useNavigate } from \"react-router-dom\";\nimport EventModal from \"./EventModal\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment);\n\nconst MyCalendar = () => {\n  const [events, setEvents] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Check authentication status when component mounts\n    const checkAuth = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/auth/status\", {\n          credentials: \"include\",\n        });\n        const data = await response.json();\n        \n        if (!data.authenticated) {\n          // If not authenticated, redirect to home page\n          navigate(\"/\");\n        }\n      } catch (error) {\n        console.error(\"Error checking auth status:\", error);\n        navigate(\"/\");\n      }\n    };\n\n    checkAuth();\n\n    \n    fetchEvents();\n  }, [navigate]);\n  const fetchEvents = async () => {\n    const response = await fetch(\"http://localhost:5000/get-events\", {\n      credentials: 'include'\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setEvents(data.map(event => ({\n        title: event.summary,\n        start: new Date(event.start.dateTime),\n        end: new Date(event.end.dateTime),\n      })));\n    }\n  };\n  const handleSelectSlot = ({ start }) => {\n    setSelectedDate(start);\n    setIsModalOpen(true);\n  };\n\n  const handleEventSubmit = async (eventData) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/add-event\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n        body: JSON.stringify(eventData),\n      });\n\n      if (response.ok) {\n        await fetchEvents(); // Refresh events after adding new one\n        setIsModalOpen(false);\n      } else {\n        alert(\"Failed to add event\");\n      }\n    } catch (error) {\n      console.error(\"Error adding event:\", error);\n      alert(\"Error adding event\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>My Calendar</h1>\n      <Calendar \n        localizer={localizer} \n        events={events} \n        startAccessor=\"start\" \n        endAccessor=\"end\" \n        style={{ height: 500 }}\n        selectable={true}\n        onSelectSlot={handleSelectSlot}\n      />\n      <EventModal \n        isOpen={isModalOpen} \n        onClose={() => setIsModalOpen(false)} \n        onSubmit={handleEventSubmit}\n        selectedDate={selectedDate}\n      />\n    </div>\n  );\n};\n\nexport default MyCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}