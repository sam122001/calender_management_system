{"ast":null,"code":"var _jsxFileName = \"/home/samyukthap/Desktop/calendar-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MyCalendar from \"./components/Calendar\";\nimport EventModal from \"./components/EventModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleGoogleAuth = () => {\n  window.location.href = \"http://localhost:5000/auth/google\";\n};\nfunction App() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n  const handleEventSubmit = async eventData => {\n    const response = await fetch(\"http://localhost:5000/add-event\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(eventData)\n    });\n    if (response.ok) {\n      alert(\"Event added successfully!\");\n      closeModal();\n    } else {\n      alert(\"Failed to add event\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Calendar App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleAuth,\n      children: \"Connect to Google Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Create Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyCalendar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventModal, {\n      isOpen: isModalOpen,\n      onClose: closeModal,\n      onSubmit: handleEventSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MyCalendar","EventModal","jsxDEV","_jsxDEV","handleGoogleAuth","window","location","href","App","_s","isModalOpen","setIsModalOpen","openModal","closeModal","handleEventSubmit","eventData","response","fetch","method","headers","body","JSON","stringify","ok","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/home/samyukthap/Desktop/calendar-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport MyCalendar from \"./components/Calendar\";\nimport EventModal from \"./components/EventModal\";\n\nconst handleGoogleAuth = () => {\n  window.location.href = \"http://localhost:5000/auth/google\";\n};\n\nfunction App() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  const handleEventSubmit = async (eventData) => {\n    const response = await fetch(\"http://localhost:5000/add-event\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(eventData),\n    });\n\n    if (response.ok) {\n      alert(\"Event added successfully!\");\n      closeModal();\n    } else {\n      alert(\"Failed to add event\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Calendar App</h1>\n      <button onClick={handleGoogleAuth}>Connect to Google Calendar</button>\n      <button onClick={openModal}>Create Event</button>\n      <MyCalendar />\n      <EventModal isOpen={isModalOpen} onClose={closeModal} onSubmit={handleEventSubmit} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,mCAAmC;AAC5D,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMa,SAAS,GAAGA,CAAA,KAAMD,cAAc,CAAC,IAAI,CAAC;EAC5C,MAAME,UAAU,GAAGA,CAAA,KAAMF,cAAc,CAAC,KAAK,CAAC;EAE9C,MAAMG,iBAAiB,GAAG,MAAOC,SAAS,IAAK;IAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,SAAS;IAChC,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;MACfC,KAAK,CAAC,2BAA2B,CAAC;MAClCX,UAAU,CAAC,CAAC;IACd,CAAC,MAAM;MACLW,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB1B,OAAA;MAAQ2B,OAAO,EAAE1B,gBAAiB;MAAAqB,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtE1B,OAAA;MAAQ2B,OAAO,EAAElB,SAAU;MAAAa,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjD1B,OAAA,CAACH,UAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACd1B,OAAA,CAACF,UAAU;MAAC8B,MAAM,EAAErB,WAAY;MAACsB,OAAO,EAAEnB,UAAW;MAACoB,QAAQ,EAAEnB;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV;AAACpB,EAAA,CAhCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}